# ** Note to the developer ** :
# 
# a) Have a consistent way of identifying the resource keys. Avoid renaming 
# keys if possible because these keys have been communicated to the business for 
# official translation (if renaming is necessary, indicate this clearly with a 
# comment and date in the property file).
#
# b) If a new key is added, you must only add the english translation in the property
# file for each language and surround the translation by exclamation marks '!'. 
# Once in every sprint all new keys to be translations will be added in the Excel sheet.
# Once Fedasil provided the translations the property files can be updated accordingly.

# These are standard javax validation I18n codes
javax.validation.constraints.NotNull.message     = !Input required!

# These are javax validation I18n codes for custom constraints available in hibernate-validator 
org.hibernate.validator.constraints.Email.message = !Not a well-formed email address!

# These are custom validation message
be.fedasil.validation.invalid.zipcode=!Zip code must be 4 digits!
be.fedasil.validation.invalid.phonenumber=!Phone number must be 9 digits!

be.fedasil.validation.placemanagement.room.nrofbeds=!Number of beds must be smaller than maximum number of beds!
be.fedasil.validation.placemanagement.room.availablenrofbeds=!Available number of beds must be equal or smaller than number of beds!

be.fedasil.validation.search.by.address.city.or.zipcode.required=!At least city or zip code is required!

#javax.validation.constraints.AssertFalse.message = !must be false!
#javax.validation.constraints.AssertTrue.message  = !must be true!
#javax.validation.constraints.DecimalMax.message  = !must be less than or equal to {value}!
#javax.validation.constraints.DecimalMin.message  = !must be greater than or equal to {value}!
#javax.validation.constraints.Digits.message      = !numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)!
#javax.validation.constraints.Future.message      = !must be in the future!
#javax.validation.constraints.Max.message         = !must be less than or equal to {value}!
#javax.validation.constraints.Min.message         = !must be greater than or equal to {value}!

#javax.validation.constraints.Null.message        = !must be null!
#javax.validation.constraints.Past.message        = !must be in the past!
#javax.validation.constraints.Pattern.message     = !must match "{regexp}"!
#javax.validation.constraints.Size.message        = !size must be between {min} and {max}!

#org.hibernate.validator.constraints.CreditCardNumber.message = invalid credit card number
#org.hibernate.validator.constraints.Email.message            = not a well-formed email address
#org.hibernate.validator.constraints.Length.message           = length must be between {min} and {max}
#org.hibernate.validator.constraints.NotBlank.message         = may not be empty
#org.hibernate.validator.constraints.NotEmpty.message         = may not be empty
#org.hibernate.validator.constraints.Range.message            = must be between {min} and {max}
#org.hibernate.validator.constraints.SafeHtml.message         = may have unsafe html content
#org.hibernate.validator.constraints.ScriptAssert.message     = script expression "{script}" didn't evaluate to true
#org.hibernate.validator.constraints.URL.message              = must be a valid URL
#org.hibernate.validator.constraints.br.CNPJ.message          = invalid Brazilian corporate taxpayer registry number (CNPJ)
#org.hibernate.validator.constraints.br.CPF.message           = invalid Brazilian individual taxpayer registry number (CPF)
#org.hibernate.validator.constraints.br.TituloEleitor.message = invalid Brazilian Voter ID card number